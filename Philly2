-- Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- UI Library
local DiscordLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/discord%20lib.txt"))()

-- Universal Functions
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Camera = Workspace.CurrentCamera

-- The RemoteEvent you found. This must be the correct path.
local promptRemoteEvent = ReplicatedStorage:FindFirstChild("interactionFunction")

-- UI Creation
local win = DiscordLib:Window("Instant Wash")
local moneyServer = win:Server("Money", "")
local moneyChannel = moneyChannel:Channel("Automation")

local interactables = {}

-- A function to find and store the interactable objects.
local function findInteractables()
    interactables = {}
    for _, descendant in ipairs(Workspace:GetDescendants()) do
        local parent = descendant.Parent
        local grandparent = parent and parent.Parent
        
        if grandparent and grandparent.Name == "WashingMachine" then
            -- Check for ProximityPrompt
            if descendant:IsA("ProximityPrompt") then
                table.insert(interactables, descendant)
                -- Check for ClickDetector
            elseif descendant:IsA("ClickDetector") then
                table.insert(interactables, descendant)
                -- Check for a Part that might be used for 'Touched' events
            elseif descendant:IsA("Part") and (descendant.Name == "Interaction" or descendant.Name == "ClickPart") then
                table.insert(interactables, descendant)
            end
        end
    end
end

-- Toggle to make prompts visible
moneyChannel:Toggle("Show Prompts", false, function(value)
    if #interactables == 0 then
        findInteractables()
    end
    
    if #interactables > 0 then
        for _, interactable in ipairs(interactables) do
            if interactable:IsA("ProximityPrompt") then
                if value then
                    interactable.MaxActivationDistance = math.huge
                    interactable.RequiresLineOfSight = false
                    interactable.Enabled = true
                    interactable.Style = Enum.ProximityPromptStyle.Custom
                else
                    -- We'll just revert the changes, a full revert requires storing original props
                    interactable.MaxActivationDistance = 10
                    interactable.RequiresLineOfSight = true
                    interactable.Enabled = false
                    interactable.Style = Enum.ProximityPromptStyle.Default
                end
            end
        end
        DiscordLib:Notification("Success", "Prompt visibility toggled!", "Okay!")
    else
        DiscordLib:Notification("Error", "No washing machine interactables found.", "Okay!")
    end
end)

moneyChannel:Button("Instant Wash", function()
    if #interactables == 0 then
        findInteractables()
    end
    
    if not promptRemoteEvent then
        DiscordLib:Notification("Error", "Interaction remote not found!", "Okay!")
        return
    end
    
    if #interactables > 0 then
        local interactedCount = 0
        for _, interactable in ipairs(interactables) do
            if (HumanoidRootPart.Position - interactable.Parent.Position).Magnitude <= 200 then
                -- Fire the remote with the correct object
                promptRemoteEvent:FireServer(interactable)
                interactedCount = interactedCount + 1
            end
        end
        
        if interactedCount > 0 then
            DiscordLib:Notification("Success", "Interacted with " .. interactedCount .. " objects!", "Okay!")
        else
            DiscordLib:Notification("Error", "No interactables found within 200 studs.", "Okay!")
        end
    else
        DiscordLib:Notification("Error", "No washing machine interactables found.", "Okay!")
    end
end)

print("Instant Wash script loaded successfully.")
