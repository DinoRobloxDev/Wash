-- Services
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

-- Variables
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

-- UI elements (assuming your UI is created elsewhere)
local playerGui = LocalPlayer:WaitForChild("PlayerGui")
local screenGui = playerGui:FindFirstChild("AutoMoveUI")
local toggleButton = screenGui and screenGui:FindFirstChild("Frame") and screenGui.Frame:FindFirstChild("ToggleButton")

if not screenGui or not toggleButton then
    warn("UI not found! Please ensure the UI creation code is present.")
    return
end

-- Coordinates for the movement
local startPoint = Vector3.new(2454.063720703125, 285.8049621582031, -1341.2506103515626)
local endPoint = Vector3.new(2473.269775390625, 285.8037414550781, -1341.27783203125)

-- Movement variables
local isRunning = false
local currentTarget = "B"
local teleportSpeed = 85 -- The speed you requested
local teleportDistance = 0.05 -- The distance per step you requested

local connection = nil

local function onRenderStep(deltaTime)
    if isRunning then
        local targetPosition
        if currentTarget == "A" then
            targetPosition = startPoint
        else
            targetPosition = endPoint
        end

        local currentPosition = HumanoidRootPart.Position
        local direction = (targetPosition - currentPosition)
        local distance = direction.Magnitude
        local normalizedDirection = direction.Unit
        
        -- Check if we're close enough to switch points
        if distance < teleportDistance * 2 then
            -- Switch targets
            currentTarget = (currentTarget == "A") and "B" or "A"
            -- Optional: Teleport directly to the next point to avoid getting stuck
            HumanoidRootPart.CFrame = CFrame.new(targetPosition)
        else
            -- Calculate the desired movement for this frame
            local moveVector = normalizedDirection * teleportDistance * teleportSpeed * deltaTime
            
            -- Apply the small teleport
            HumanoidRootPart.CFrame = HumanoidRootPart.CFrame + moveVector
            
            -- Rotate the character to face the direction of movement
            local lookAtCFrame = CFrame.lookAt(HumanoidRootPart.Position, HumanoidRootPart.Position + normalizedDirection)
            HumanoidRootPart.CFrame = CFrame.new(HumanoidRootPart.CFrame.Position) * lookAtCFrame.Rotation
        end
    end
end

toggleButton.MouseButton1Click:Connect(function()
    isRunning = not isRunning
    if isRunning then
        toggleButton.Text = "STOP"
        toggleButton.BackgroundColor3 = Color3.fromRGB(150, 50, 50)
        
        -- Teleport to the starting point and start the loop
        HumanoidRootPart.CFrame = CFrame.new(startPoint)
        connection = RunService.RenderStepped:Connect(onRenderStep)
    else
        toggleButton.Text = "START"
        toggleButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
        
        -- Disconnect the loop
        if connection then
            connection:Disconnect()
            connection = nil
        end
    end
end)

print("Super Speed script (modified) loaded successfully.")
